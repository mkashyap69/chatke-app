{"version":3,"sources":["../../src/env.tsx"],"names":["mockEnv","window","ssrWindow","document","ssrDocument","defaultEnv","EnvironmentContext","displayName","useEnvironment","EnvironmentProvider","props","children","environmentProp","environment","node","setNode","context","doc","ownerDocument","win","defaultView","nodeEnv","env","shouldRenderChildren","el"],"mappings":";;;;;;AAAA;;AACA;;AACA;;;;;;AAOA,IAAMA,OAAO,GAAG;AACdC,EAAAA,MAAM,EAAEC,qBADM;AAEdC,EAAAA,QAAQ,EAAEC;AAFI,CAAhB;AAKA,IAAMC,UAAuB,GAC3B,OAAOJ,MAAP,KAAkB,WAAlB,GAAgC;AAAEA,EAAAA,MAAM,EAANA,MAAF;AAAUE,EAAAA,QAAQ,EAARA;AAAV,CAAhC,GAAuDH,OADzD;AAGA,IAAMM,kBAAkB,gBAAG,0BAAcD,UAAd,CAA3B;AACAC,kBAAkB,CAACC,WAAnB,GAAiC,oBAAjC;;AAEO,SAASC,cAAT,GAA0B;AAC/B,SAAO,uBAAWF,kBAAX,CAAP;AACD;;AAOM,SAASG,mBAAT,CAA6BC,KAA7B,EAA8D;AAAA,MAC3DC,QAD2D,GAChBD,KADgB,CAC3DC,QAD2D;AAAA,MACpCC,eADoC,GAChBF,KADgB,CACjDG,WADiD;;AAAA,kBAE3C,qBAA6B,IAA7B,CAF2C;AAAA,MAE5DC,IAF4D;AAAA,MAEtDC,OAFsD;;AAInE,MAAMC,OAAO,GAAG,oBAAQ,YAAM;AAAA;;AAC5B,QAAMC,GAAG,GAAGH,IAAH,oBAAGA,IAAI,CAAEI,aAAlB;AACA,QAAMC,GAAG,GAAGL,IAAH,oBAAGA,IAAI,CAAEI,aAAN,CAAoBE,WAAhC;AACA,QAAMC,OAAO,GAAG;AAAElB,MAAAA,QAAQ,EAAEc,GAAZ;AAAiBhB,MAAAA,MAAM,EAAEkB;AAAzB,KAAhB;AACA,QAAMG,GAAG,WAAGV,eAAH,WAAGA,eAAH,GAAsBS,OAAtB,mBAAiChB,UAA1C;AACA,WAAOiB,GAAP;AACD,GANe,EAMb,CAACR,IAAD,EAAOF,eAAP,CANa,CAAhB;AAQA,MAAMW,oBAAoB,GAAGT,IAAI,IAAIF,eAArC;AAEA,sBACE,gCAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEI;AAApC,KACGO,oBAAoB,GACnBZ,QADmB,gBAGnB;AACE,IAAA,GAAG,EAAE,aAACa,EAAD,EAAQ;AACX,UAAIA,EAAJ,EAAQT,OAAO,CAACS,EAAD,CAAP;AACT;AAHH,IAJJ,CADF;AAaD","sourcesContent":["import React, { useMemo, useState, createContext, useContext } from \"react\"\nimport { ssrWindow } from \"./mock-window\"\nimport { ssrDocument } from \"./mock-document\"\n\ninterface Environment {\n  window: Window\n  document: Document\n}\n\nconst mockEnv = {\n  window: ssrWindow,\n  document: ssrDocument,\n}\n\nconst defaultEnv: Environment =\n  typeof window !== \"undefined\" ? { window, document } : mockEnv\n\nconst EnvironmentContext = createContext(defaultEnv)\nEnvironmentContext.displayName = \"EnvironmentContext\"\n\nexport function useEnvironment() {\n  return useContext(EnvironmentContext)\n}\n\nexport interface EnvironmentProviderProps {\n  children: React.ReactNode\n  environment?: Environment\n}\n\nexport function EnvironmentProvider(props: EnvironmentProviderProps) {\n  const { children, environment: environmentProp } = props\n  const [node, setNode] = useState<HTMLElement | null>(null)\n\n  const context = useMemo(() => {\n    const doc = node?.ownerDocument\n    const win = node?.ownerDocument.defaultView\n    const nodeEnv = { document: doc, window: win }\n    const env = environmentProp ?? nodeEnv ?? defaultEnv\n    return env as Environment\n  }, [node, environmentProp])\n\n  const shouldRenderChildren = node || environmentProp\n\n  return (\n    <EnvironmentContext.Provider value={context}>\n      {shouldRenderChildren ? (\n        children\n      ) : (\n        <span\n          ref={(el) => {\n            if (el) setNode(el)\n          }}\n        />\n      )}\n    </EnvironmentContext.Provider>\n  )\n}\n"],"file":"env.js"}