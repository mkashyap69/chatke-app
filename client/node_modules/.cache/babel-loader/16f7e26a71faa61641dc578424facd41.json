{"ast":null,"code":"import _toConsumableArray from\"/Users/manish./Desktop/WebDev/whatsapp-socketio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/manish./Desktop/WebDev/whatsapp-socketio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* eslint-disable react-hooks/exhaustive-deps */import React,{useState,useEffect}from'react';import ChatProfileBar from'./ChatProfileBar';import ChatAreaMessages from'./ChatAreaMessages';import ChatAreaInput from'./ChatAreaInput';import{io}from'socket.io-client';import{useDispatch,useSelector}from'react-redux';import moment from'moment';import{getMsgHistory,saveMsgsHistory}from'../redux/actions/msgsActions';import{getRecentFriendsList}from'../redux/actions/friendsListAction';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var socket=io('https://whatsapp-socketio-react.herokuapp.com');function ChatArea(_ref){var SideBarDrawer=_ref.SideBarDrawer;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),msg=_useState2[0],setMsg=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),msgsHistory=_useState4[0],setMsgsHistory=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),roomName=_useState6[0],setRoomName=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),retrievedMsgsHistoryState=_useState8[0],setRetrievedMsgsHistoryState=_useState8[1];var dispatch=useDispatch();var clickedUser=useSelector(function(state){return state.clickedUser.user;});var loggedInUser=useSelector(function(state){return state.user.data.data.user;});var retrievedMsgsHistory=useSelector(function(state){var _state$msgsHistory;return(_state$msgsHistory=state.msgsHistory)===null||_state$msgsHistory===void 0?void 0:_state$msgsHistory.data;});useEffect(function(){dispatch(getRecentFriendsList());},[]);useEffect(function(){socket.on('messageToUser',function(_ref2){var message=_ref2.message,user=_ref2.user,current_time=_ref2.current_time;setMsgsHistory([].concat(_toConsumableArray(msgsHistory),[{message:message,user:user,current_time:current_time,outgoing:false}]));dispatch(saveMsgsHistory({message:message,user:user,current_time:current_time,outgoing:false},roomName,loggedInUser===null||loggedInUser===void 0?void 0:loggedInUser._id,clickedUser===null||clickedUser===void 0?void 0:clickedUser._id));});return function(){socket.off('messageToUser');};},[msgsHistory,roomName]);useEffect(function(){if(clickedUser&&roomName){dispatch(getMsgHistory(roomName));}},[clickedUser,roomName,msgsHistory]);useEffect(function(){setRetrievedMsgsHistoryState(retrievedMsgsHistory);},[retrievedMsgsHistory]);useEffect(function(){var clickedUserUserId=clickedUser===null||clickedUser===void 0?void 0:clickedUser.userId;if(typeof clickedUserUserId==='undefined')return;else{var loggedInUserUserId=loggedInUser.userId;var _roomName=parseInt(loggedInUserUserId,36)*parseInt(clickedUserUserId,36);setRoomName(_roomName);socket.emit('roomNameToJoin',_roomName);}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[clickedUser]);var onSend=function onSend(e){if(msg===''){return;}var current_time=moment().format('HH:mm');setMsgsHistory([].concat(_toConsumableArray(msgsHistory),[{message:msg,user:loggedInUser.userId,current_time:current_time,outgoing:true}]));dispatch(saveMsgsHistory({message:msg,user:loggedInUser.userId,current_time:current_time,outgoing:true},roomName,loggedInUser===null||loggedInUser===void 0?void 0:loggedInUser._id,clickedUser===null||clickedUser===void 0?void 0:clickedUser._id));socket.emit('message',{message:msg,user:loggedInUser.userId});setMsg('');};var onChange=function onChange(e){setMsg(e.target.value);};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-area\",children:[/*#__PURE__*/_jsx(ChatProfileBar,{user:clickedUser,SideBarDrawer:SideBarDrawer}),/*#__PURE__*/_jsx(ChatAreaMessages,{msgs:retrievedMsgsHistoryState?retrievedMsgsHistoryState:[]}),/*#__PURE__*/_jsx(ChatAreaInput,{onSend:onSend,msg:msg,onChange:onChange})]});}export default ChatArea;/*\n \n\n\nif (loggedInUser && clickedUser && retrievedMsgsHistory) {\n  let newMsgsHistory = retrievedMsgsHistory.concat(msgsHistory);\n  dispatch(\n    saveMsgsHistory(newMsgsHistory, loggedInUser?._id, clickedUser?._id)\n  );\n}*/","map":{"version":3,"sources":["/Users/manish./Desktop/WebDev/whatsapp-socketio/client/src/components/ChatArea.js"],"names":["React","useState","useEffect","ChatProfileBar","ChatAreaMessages","ChatAreaInput","io","useDispatch","useSelector","moment","getMsgHistory","saveMsgsHistory","getRecentFriendsList","socket","ChatArea","SideBarDrawer","msg","setMsg","msgsHistory","setMsgsHistory","roomName","setRoomName","retrievedMsgsHistoryState","setRetrievedMsgsHistoryState","dispatch","clickedUser","state","user","loggedInUser","data","retrievedMsgsHistory","on","message","current_time","outgoing","_id","off","clickedUserUserId","userId","loggedInUserUserId","parseInt","emit","onSend","e","format","onChange","target","value"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from 'react';\nimport ChatProfileBar from './ChatProfileBar';\nimport ChatAreaMessages from './ChatAreaMessages';\nimport ChatAreaInput from './ChatAreaInput';\nimport { io } from 'socket.io-client';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\nimport { getMsgHistory, saveMsgsHistory } from '../redux/actions/msgsActions';\nimport { getRecentFriendsList } from '../redux/actions/friendsListAction';\n\nconst socket = io('https://whatsapp-socketio-react.herokuapp.com');\n\nfunction ChatArea({ SideBarDrawer }) {\n  const [msg, setMsg] = useState('');\n  const [msgsHistory, setMsgsHistory] = useState([]);\n  const [roomName, setRoomName] = useState(null);\n  const [retrievedMsgsHistoryState, setRetrievedMsgsHistoryState] = useState(\n    []\n  );\n  const dispatch = useDispatch();\n\n  const clickedUser = useSelector((state) => state.clickedUser.user);\n  const loggedInUser = useSelector((state) => state.user.data.data.user);\n  const retrievedMsgsHistory = useSelector((state) => state.msgsHistory?.data);\n\n  useEffect(() => {\n    dispatch(getRecentFriendsList());\n  }, []);\n\n  useEffect(() => {\n    socket.on('messageToUser', ({ message, user, current_time }) => {\n      setMsgsHistory([\n        ...msgsHistory,\n        { message, user, current_time, outgoing: false },\n      ]);\n      dispatch(\n        saveMsgsHistory(\n          { message, user, current_time, outgoing: false },\n          roomName,\n          loggedInUser?._id,\n          clickedUser?._id\n        )\n      );\n    });\n\n    return () => {\n      socket.off('messageToUser');\n    };\n  }, [msgsHistory, roomName]);\n\n  useEffect(() => {\n    if (clickedUser && roomName) {\n      dispatch(getMsgHistory(roomName));\n    }\n  }, [clickedUser, roomName, msgsHistory]);\n\n  useEffect(() => {\n    setRetrievedMsgsHistoryState(retrievedMsgsHistory);\n  }, [retrievedMsgsHistory]);\n\n  useEffect(() => {\n    const clickedUserUserId = clickedUser?.userId;\n    if (typeof clickedUserUserId === 'undefined') return;\n    else {\n      const loggedInUserUserId = loggedInUser.userId;\n\n      let roomName =\n        parseInt(loggedInUserUserId, 36) * parseInt(clickedUserUserId, 36);\n      setRoomName(roomName);\n      socket.emit('roomNameToJoin', roomName);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [clickedUser]);\n\n  const onSend = (e) => {\n    if (msg === '') {\n      return;\n    }\n\n    let current_time = moment().format('HH:mm');\n\n    setMsgsHistory([\n      ...msgsHistory,\n\n      {\n        message: msg,\n        user: loggedInUser.userId,\n        current_time,\n        outgoing: true,\n      },\n    ]);\n    dispatch(\n      saveMsgsHistory(\n        {\n          message: msg,\n          user: loggedInUser.userId,\n          current_time,\n          outgoing: true,\n        },\n        roomName,\n        loggedInUser?._id,\n        clickedUser?._id\n      )\n    );\n    socket.emit('message', { message: msg, user: loggedInUser.userId });\n\n    setMsg('');\n  };\n\n  const onChange = (e) => {\n    setMsg(e.target.value);\n  };\n\n  return (\n    <div className=\"chat-area\">\n      <ChatProfileBar user={clickedUser} SideBarDrawer={SideBarDrawer} />\n      <ChatAreaMessages\n        msgs={retrievedMsgsHistoryState ? retrievedMsgsHistoryState : []}\n      />\n      <ChatAreaInput onSend={onSend} msg={msg} onChange={onChange} />\n    </div>\n  );\n}\n\nexport default ChatArea;\n\n/*\n \n\n\nif (loggedInUser && clickedUser && retrievedMsgsHistory) {\n  let newMsgsHistory = retrievedMsgsHistory.concat(msgsHistory);\n  dispatch(\n    saveMsgsHistory(newMsgsHistory, loggedInUser?._id, clickedUser?._id)\n  );\n}*/\n"]},"metadata":{},"sourceType":"module"}