{"ast":null,"code":"var _jsxFileName = \"/Users/manish./Desktop/WebDev/whatsapp-socketio-master/client/src/components/LoginModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { InputGroup, InputRightElement, Input, FormControl, FormLabel } from '@chakra-ui/react';\nimport { Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay } from '@chakra-ui/modal';\nimport { Button } from '@chakra-ui/button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { login } from '../redux/actions/userActions';\nimport { useHistory } from 'react-router-dom';\nimport { useToast } from '@chakra-ui/toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginModal = ({\n  isOpen,\n  onClose\n}) => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const toast = useToast();\n  const [show, setShow] = React.useState(false);\n\n  const handleClick = () => setShow(!show);\n\n  const {\n    loading,\n    error,\n    data\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    if (data === null || data === void 0 ? void 0 : data.data.user) {\n      history.push('/chat');\n    }\n  }, [data]);\n  useEffect(() => {\n    if (error) {\n      console.log(error.toString());\n      console.log(error.index('E11000'));\n\n      if (error.search('E11000 duplicate key')) {\n        toast({\n          title: `This userId is already taken`,\n          status: 'error',\n          isClosable: true\n        });\n      } else {\n        toast({\n          title: `${error}`,\n          status: 'error',\n          isClosable: true\n        });\n      }\n    }\n  }, [error]);\n\n  const onSubmit = () => {\n    dispatch(login(email, password));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpen,\n      onClose: onClose,\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: \"Log In your account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          pb: 6,\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            mt: 4,\n            isRequired: true,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Enter Email Address\",\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            mt: 4,\n            isRequired: true,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n              size: \"md\",\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                pr: \"4.5rem\",\n                type: show ? 'text' : 'password',\n                placeholder: \"Enter password\",\n                onChange: e => setPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n                width: \"4.5rem\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  h: \"1.75rem\",\n                  size: \"sm\",\n                  onClick: handleClick,\n                  children: show ? 'Hide' : 'Show'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            isLoading: loading,\n            onClick: onSubmit,\n            colorScheme: \"blue\",\n            mr: 3,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onClose,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginModal, \"Xly3Z02/P0IGvUIeCY9b/j9NIhk=\", false, function () {\n  return [useDispatch, useHistory, useToast, useSelector];\n});\n\n_c = LoginModal;\nexport default LoginModal;\n/*if (data?.status === 'Success') {\n      toast({\n        title: 'Login Success.',\n        description: 'You will be redirected to the main page',\n        status: 'success',\n        duration: 2000,\n        isClosable: true,\n      });\n    }\n    \n    \n    const handleKeypress = (e) => {\n    if (e.keyCode === 13) {\n      onSubmit();\n    }\n  };*/\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginModal\");","map":{"version":3,"sources":["/Users/manish./Desktop/WebDev/whatsapp-socketio-master/client/src/components/LoginModal.js"],"names":["React","useState","useEffect","InputGroup","InputRightElement","Input","FormControl","FormLabel","Modal","ModalBody","ModalCloseButton","ModalContent","ModalFooter","ModalHeader","ModalOverlay","Button","useSelector","useDispatch","login","useHistory","useToast","LoginModal","isOpen","onClose","email","setEmail","password","setPassword","dispatch","history","toast","show","setShow","handleClick","loading","error","data","state","user","push","console","log","toString","index","search","title","status","isClosable","onSubmit","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  InputGroup,\n  InputRightElement,\n  Input,\n  FormControl,\n  FormLabel,\n} from '@chakra-ui/react';\n\nimport {\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n} from '@chakra-ui/modal';\nimport { Button } from '@chakra-ui/button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { login } from '../redux/actions/userActions';\nimport { useHistory } from 'react-router-dom';\nimport { useToast } from '@chakra-ui/toast';\n\nconst LoginModal = ({ isOpen, onClose }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const toast = useToast();\n\n  const [show, setShow] = React.useState(false);\n  const handleClick = () => setShow(!show);\n\n  const { loading, error, data } = useSelector((state) => state.user);\n\n  useEffect(() => {\n    if (data?.data.user) {\n      history.push('/chat');\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (error) {\n      console.log(error.toString());\n      console.log(error.index('E11000'))\n      if (error.search('E11000 duplicate key')) {\n        toast({\n          title: `This userId is already taken`,\n          status: 'error',\n          isClosable: true,\n        });\n      } else {\n        toast({\n          title: `${error}`,\n          status: 'error',\n          isClosable: true,\n        });\n      }\n    }\n  }, [error]);\n\n  const onSubmit = () => {\n    dispatch(login(email, password));\n  };\n\n  return (\n    <div>\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Log In your account</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody pb={6}>\n            <FormControl mt={4} isRequired>\n              <FormLabel>Email Address</FormLabel>\n              <Input\n                placeholder=\"Enter Email Address\"\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </FormControl>\n\n            <FormControl mt={4} isRequired>\n              <FormLabel>Password</FormLabel>\n              <InputGroup size=\"md\">\n                <Input\n                  pr=\"4.5rem\"\n                  type={show ? 'text' : 'password'}\n                  placeholder=\"Enter password\"\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n                <InputRightElement width=\"4.5rem\">\n                  <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n                    {show ? 'Hide' : 'Show'}\n                  </Button>\n                </InputRightElement>\n              </InputGroup>\n            </FormControl>\n          </ModalBody>\n\n          <ModalFooter>\n            <Button\n              isLoading={loading}\n              onClick={onSubmit}\n              colorScheme=\"blue\"\n              mr={3}\n            >\n              Login\n            </Button>\n            <Button onClick={onClose}>Cancel</Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </div>\n  );\n};\n\nexport default LoginModal;\n\n/*if (data?.status === 'Success') {\n      toast({\n        title: 'Login Success.',\n        description: 'You will be redirected to the main page',\n        status: 'success',\n        duration: 2000,\n        isClosable: true,\n      });\n    }\n    \n    \n    const handleKeypress = (e) => {\n    if (e.keyCode === 13) {\n      onSubmit();\n    }\n  };*/\n"]},"metadata":{},"sourceType":"module"}