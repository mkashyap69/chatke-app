{"ast":null,"code":"import _regeneratorRuntime from\"/Users/manish./Desktop/WebDev/whatsapp-socketio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/manish./Desktop/WebDev/whatsapp-socketio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';export var saveMsgsHistory=function saveMsgsHistory(msgsHistory,roomName,loggedInUser,clickedUser){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch,getState){var _getState,user,config,_yield$axios$post,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;dispatch({type:'SAVE_MSGS_HISTORY_START'});_getState=getState(),user=_getState.user;config={headers:{Authorization:\"Bearer \".concat(user.data.token)}};console.log(roomName);_context.next=7;return axios.post('http://localhost:9000/api/v1/msgs',{roomName:roomName,loggedInUser:loggedInUser,clickedUser:clickedUser,msgsHistory:msgsHistory},config);case 7:_yield$axios$post=_context.sent;data=_yield$axios$post.data;dispatch({type:'SAVE_MSGS_HISTORY_SUCCESS',payload:data.data.msgsHistory});_context.next=15;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](0);dispatch({type:'SAVE_MSGS_HISTORY_FAILURE',payload:_context.t0.response&&_context.t0.response.data.message?_context.t0.response.data.message:_context.t0.message});case 15:case\"end\":return _context.stop();}}},_callee,null,[[0,12]]);}));return function(_x,_x2){return _ref.apply(this,arguments);};}();};export var getMsgHistory=function getMsgHistory(roomName){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch,getState){var _getState2,user,config,_yield$axios$get,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;dispatch({type:'GET_MSGS_HISTORY_START'});_getState2=getState(),user=_getState2.user;config={headers:{Authorization:\"Bearer \".concat(user.data.token)}};_context2.next=6;return axios.get(\"http://localhost:9000/api/v1/msgs/\".concat(roomName),config);case 6:_yield$axios$get=_context2.sent;data=_yield$axios$get.data;dispatch({type:'GET_MSGS_HISTORY_SUCCESS',payload:data.data.msgsHistory});_context2.next=14;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](0);dispatch({type:'GET_MSGS_HISTORY_FAILURE',payload:_context2.t0.response&&_context2.t0.response.data.message?_context2.t0.response.data.message:_context2.t0.message});case 14:case\"end\":return _context2.stop();}}},_callee2,null,[[0,11]]);}));return function(_x3,_x4){return _ref2.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/manish./Desktop/WebDev/whatsapp-socketio/client/src/redux/actions/msgsActions.js"],"names":["axios","saveMsgsHistory","msgsHistory","roomName","loggedInUser","clickedUser","dispatch","getState","type","user","config","headers","Authorization","data","token","console","log","post","payload","response","message","getMsgHistory","get"],"mappings":"uVAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAC7BC,WAD6B,CAE7BC,QAF6B,CAG7BC,YAH6B,CAI7BC,WAJ6B,iGAK1B,iBAAOC,QAAP,CAAiBC,QAAjB,mLAEDD,QAAQ,CAAC,CACPE,IAAI,CAAE,yBADC,CAAD,CAAR,CAFC,UAKgBD,QAAQ,EALxB,CAKOE,IALP,WAKOA,IALP,CAOKC,MAPL,CAOc,CACbC,OAAO,CAAE,CACPC,aAAa,kBAAYH,IAAI,CAACI,IAAL,CAAUC,KAAtB,CADN,CADI,CAPd,CAYDC,OAAO,CAACC,GAAR,CAAYb,QAAZ,EAZC,sBAasBH,CAAAA,KAAK,CAACiB,IAAN,CACrB,mCADqB,CAErB,CACEd,QAAQ,CAARA,QADF,CAEEC,YAAY,CAAZA,YAFF,CAGEC,WAAW,CAAXA,WAHF,CAIEH,WAAW,CAAXA,WAJF,CAFqB,CAQrBQ,MARqB,CAbtB,wCAaOG,IAbP,mBAaOA,IAbP,CAuBDP,QAAQ,CAAC,CACPE,IAAI,CAAE,2BADC,CAEPU,OAAO,CAAEL,IAAI,CAACA,IAAL,CAAUX,WAFZ,CAAD,CAAR,CAvBC,iFA4BDI,QAAQ,CAAC,CACPE,IAAI,CAAE,2BADC,CAEPU,OAAO,CACL,YAAMC,QAAN,EAAkB,YAAMA,QAAN,CAAeN,IAAf,CAAoBO,OAAtC,CACI,YAAMD,QAAN,CAAeN,IAAf,CAAoBO,OADxB,CAEI,YAAMA,OALL,CAAD,CAAR,CA5BC,qEAL0B,oEAAxB,CA2CP,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAClB,QAAD,kGAAc,kBAAOG,QAAP,CAAiBC,QAAjB,wLAEvCD,QAAQ,CAAC,CACPE,IAAI,CAAE,wBADC,CAAD,CAAR,CAFuC,WAMtBD,QAAQ,EANc,CAM/BE,IAN+B,YAM/BA,IAN+B,CAQjCC,MARiC,CAQxB,CACbC,OAAO,CAAE,CACPC,aAAa,kBAAYH,IAAI,CAACI,IAAL,CAAUC,KAAtB,CADN,CADI,CARwB,wBAahBd,CAAAA,KAAK,CAACsB,GAAN,6CACgBnB,QADhB,EAErBO,MAFqB,CAbgB,wCAa/BG,IAb+B,kBAa/BA,IAb+B,CAiBvCP,QAAQ,CAAC,CACPE,IAAI,CAAE,0BADC,CAEPU,OAAO,CAAEL,IAAI,CAACA,IAAL,CAAUX,WAFZ,CAAD,CAAR,CAjBuC,qFAsBvCI,QAAQ,CAAC,CACPE,IAAI,CAAE,0BADC,CAEPU,OAAO,CACL,aAAMC,QAAN,EAAkB,aAAMA,QAAN,CAAeN,IAAf,CAAoBO,OAAtC,CACI,aAAMD,QAAN,CAAeN,IAAf,CAAoBO,OADxB,CAEI,aAAMA,OALL,CAAD,CAAR,CAtBuC,uEAAd,sEAAtB","sourcesContent":["import axios from 'axios';\n\nexport const saveMsgsHistory = (\n  msgsHistory,\n  roomName,\n  loggedInUser,\n  clickedUser\n) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: 'SAVE_MSGS_HISTORY_START',\n    });\n    const { user } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${user.data.token}`,\n      },\n    };\n    console.log(roomName);\n    const { data } = await axios.post(\n      'http://localhost:9000/api/v1/msgs',\n      {\n        roomName,\n        loggedInUser,\n        clickedUser,\n        msgsHistory,\n      },\n      config\n    );\n    dispatch({\n      type: 'SAVE_MSGS_HISTORY_SUCCESS',\n      payload: data.data.msgsHistory,\n    });\n  } catch (error) {\n    dispatch({\n      type: 'SAVE_MSGS_HISTORY_FAILURE',\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getMsgHistory = (roomName) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: 'GET_MSGS_HISTORY_START',\n    });\n\n    const { user } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${user.data.token}`,\n      },\n    };\n    const { data } = await axios.get(\n      `http://localhost:9000/api/v1/msgs/${roomName}`,\n      config\n    );\n    dispatch({\n      type: 'GET_MSGS_HISTORY_SUCCESS',\n      payload: data.data.msgsHistory,\n    });\n  } catch (error) {\n    dispatch({\n      type: 'GET_MSGS_HISTORY_FAILURE',\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}