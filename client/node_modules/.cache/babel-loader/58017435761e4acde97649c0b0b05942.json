{"ast":null,"code":"import axios from 'axios';\nexport const getRecentFriendsList = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: 'GET_FRIENDS_CHATTED_WITH_START'\n    });\n    const {\n      user\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${user.data.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get('http://localhost:9000/api/v1/friends/', config);\n    dispatch({\n      type: 'GET_FRIENDS_CHATTED_WITH_SUCCESS',\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'GET_FRIENDS_CHATTED_WITH_FAILURE',\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const addToRecentFriendsList = clickedUser => async (dispatch, getState) => {\n  co;\n\n  try {\n    dispatch({\n      type: 'ADD_TO_RECENT_START'\n    });\n    const {\n      user\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${user.data.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post('http://localhost:9000/api/v1/friends/', {\n      clickedUser\n    }, config);\n    dispatch({\n      type: 'ADD_TO_RECENT_SUCCESS',\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'ADD_TO_RECENT_FAILURE',\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/manish./Desktop/WebDev/whatsapp-socketio/client/src/redux/actions/friendsListAction.js"],"names":["axios","getRecentFriendsList","dispatch","getState","type","user","config","headers","Authorization","data","token","get","payload","error","response","message","addToRecentFriendsList","clickedUser","co","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,oBAAoB,GAAG,MAAM,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACtE,MAAI;AACFD,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAIA,UAAM;AAAEC,MAAAA;AAAF,QAAWF,QAAQ,EAAzB;AAEA,UAAMG,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASH,IAAI,CAACI,IAAL,CAAUC,KAAM;AADlC;AADI,KAAf;AAMA,UAAM;AAAED,MAAAA;AAAF,QAAW,MAAMT,KAAK,CAACW,GAAN,CACrB,uCADqB,EAErBL,MAFqB,CAAvB;AAKAJ,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE,kCADC;AAEPQ,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAID,GAtBD,CAsBE,OAAOI,KAAP,EAAc;AACdX,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE,kCADC;AAEPQ,MAAAA,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeL,IAAf,CAAoBM,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeL,IAAf,CAAoBM,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CAhCM;AAkCP,OAAO,MAAMC,sBAAsB,GAAIC,WAAD,IAAiB,OACrDf,QADqD,EAErDC,QAFqD,KAGlD;AACHe,EAAAA,EAAE;;AACF,MAAI;AACFhB,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAIA,UAAM;AAAEC,MAAAA;AAAF,QAAWF,QAAQ,EAAzB;AAEA,UAAMG,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASH,IAAI,CAACI,IAAL,CAAUC,KAAM;AADlC;AADI,KAAf;AAMA,UAAM;AAAED,MAAAA;AAAF,QAAW,MAAMT,KAAK,CAACmB,IAAN,CACrB,uCADqB,EAErB;AAACF,MAAAA;AAAD,KAFqB,EAGrBX,MAHqB,CAAvB;AAMAJ,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE,uBADC;AAEPQ,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAID,GAvBD,CAuBE,OAAOI,KAAP,EAAc;AACdX,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE,uBADC;AAEPQ,MAAAA,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeL,IAAf,CAAoBM,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeL,IAAf,CAAoBM,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CArCM","sourcesContent":["import axios from 'axios';\n\nexport const getRecentFriendsList = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: 'GET_FRIENDS_CHATTED_WITH_START',\n    });\n\n    const { user } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${user.data.token}`,\n      },\n    };\n\n    const { data } = await axios.get(\n      'http://localhost:9000/api/v1/friends/',\n      config\n    );\n\n    dispatch({\n      type: 'GET_FRIENDS_CHATTED_WITH_SUCCESS',\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: 'GET_FRIENDS_CHATTED_WITH_FAILURE',\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const addToRecentFriendsList = (clickedUser) => async (\n  dispatch,\n  getState\n) => {\n  co\n  try {\n    dispatch({\n      type: 'ADD_TO_RECENT_START',\n    });\n\n    const { user } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${user.data.token}`,\n      },\n    };\n\n    const { data } = await axios.post(\n      'http://localhost:9000/api/v1/friends/',\n      {clickedUser},\n      config\n    );\n\n    dispatch({\n      type: 'ADD_TO_RECENT_SUCCESS',\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: 'ADD_TO_RECENT_FAILURE',\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}