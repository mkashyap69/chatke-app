{"ast":null,"code":"import axios from 'axios';\nexport const saveMsgsHistory = (msgsHistory, roomName, loggedInUser, clickedUser) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: 'SAVE_MSGS_HISTORY_START'\n    });\n    const {\n      user\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${user.data.token}`\n      }\n    };\n    console.log(roomName);\n    const {\n      data\n    } = await axios.post('http://localhost:9000/api/v1/msgs', {\n      roomName,\n      loggedInUser,\n      clickedUser,\n      msgsHistory\n    }, config);\n    console.log(data);\n    dispatch({\n      type: 'SAVE_MSGS_HISTORY_SUCCESS',\n      payload: data.data.msgsHistory\n    });\n  } catch (error) {\n    dispatch({\n      type: 'SAVE_MSGS_HISTORY_FAILURE',\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getMsgHistory = roomName => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: 'GET_MSGS_HISTORY_START'\n    });\n    const {\n      user\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${user.data.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`http://localhost:9000/api/v1/msgs/${roomName}`, config);\n    dispatch({\n      type: 'GET_MSGS_HISTORY_SUCCESS',\n      payload: data.data.msgsHistory\n    });\n  } catch (error) {\n    dispatch({\n      type: 'GET_MSGS_HISTORY_FAILURE',\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/manish./Desktop/WebDev/whatsapp-socketio/client/src/redux/actions/msgsActions.js"],"names":["axios","saveMsgsHistory","msgsHistory","roomName","loggedInUser","clickedUser","dispatch","getState","type","user","config","headers","Authorization","data","token","console","log","post","payload","error","response","message","getMsgHistory","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,eAAe,GAAG,CAC7BC,WAD6B,EAE7BC,QAF6B,EAG7BC,YAH6B,EAI7BC,WAJ6B,KAK1B,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACjC,MAAI;AACFD,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAGA,UAAM;AAAEC,MAAAA;AAAF,QAAWF,QAAQ,EAAzB;AAEA,UAAMG,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASH,IAAI,CAACI,IAAL,CAAUC,KAAM;AADlC;AADI,KAAf;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAYb,QAAZ;AACA,UAAM;AAAEU,MAAAA;AAAF,QAAW,MAAMb,KAAK,CAACiB,IAAN,CACrB,mCADqB,EAErB;AACEd,MAAAA,QADF;AAEEC,MAAAA,YAFF;AAGEC,MAAAA,WAHF;AAIEH,MAAAA;AAJF,KAFqB,EAQrBQ,MARqB,CAAvB;AAUAK,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAP,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE,2BADC;AAEPU,MAAAA,OAAO,EAAEL,IAAI,CAACA,IAAL,CAAUX;AAFZ,KAAD,CAAR;AAID,GA3BD,CA2BE,OAAOiB,KAAP,EAAc;AACdb,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE,2BADC;AAEPU,MAAAA,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CA1CM;AA4CP,OAAO,MAAMC,aAAa,GAAInB,QAAD,IAAc,OAAOG,QAAP,EAAiBC,QAAjB,KAA8B;AACvE,MAAI;AACFD,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAIA,UAAM;AAAEC,MAAAA;AAAF,QAAWF,QAAQ,EAAzB;AAEA,UAAMG,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASH,IAAI,CAACI,IAAL,CAAUC,KAAM;AADlC;AADI,KAAf;AAKA,UAAM;AAAED,MAAAA;AAAF,QAAW,MAAMb,KAAK,CAACuB,GAAN,CACpB,qCAAoCpB,QAAS,EADzB,EAErBO,MAFqB,CAAvB;AAIAJ,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE,0BADC;AAEPU,MAAAA,OAAO,EAAEL,IAAI,CAACA,IAAL,CAAUX;AAFZ,KAAD,CAAR;AAID,GApBD,CAoBE,OAAOiB,KAAP,EAAc;AACdb,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE,0BADC;AAEPU,MAAAA,OAAO,EACLC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CA9BM","sourcesContent":["import axios from 'axios';\n\nexport const saveMsgsHistory = (\n  msgsHistory,\n  roomName,\n  loggedInUser,\n  clickedUser\n) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: 'SAVE_MSGS_HISTORY_START',\n    });\n    const { user } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${user.data.token}`,\n      },\n    };\n    console.log(roomName);\n    const { data } = await axios.post(\n      'http://localhost:9000/api/v1/msgs',\n      {\n        roomName,\n        loggedInUser,\n        clickedUser,\n        msgsHistory,\n      },\n      config\n    );\n    console.log(data);\n    dispatch({\n      type: 'SAVE_MSGS_HISTORY_SUCCESS',\n      payload: data.data.msgsHistory,\n    });\n  } catch (error) {\n    dispatch({\n      type: 'SAVE_MSGS_HISTORY_FAILURE',\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getMsgHistory = (roomName) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: 'GET_MSGS_HISTORY_START',\n    });\n\n    const { user } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${user.data.token}`,\n      },\n    };\n    const { data } = await axios.get(\n      `http://localhost:9000/api/v1/msgs/${roomName}`,\n      config\n    );\n    dispatch({\n      type: 'GET_MSGS_HISTORY_SUCCESS',\n      payload: data.data.msgsHistory,\n    });\n  } catch (error) {\n    dispatch({\n      type: 'GET_MSGS_HISTORY_FAILURE',\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}