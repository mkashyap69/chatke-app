{"ast":null,"code":"var _jsxFileName = \"/Users/manish./Desktop/WebDev/whatsapp-socketio-master/client/src/components/ChatArea.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ChatProfileBar from './ChatProfileBar';\nimport ChatAreaMessages from './ChatAreaMessages';\nimport ChatAreaInput from './ChatAreaInput';\nimport { io } from 'socket.io-client';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:9000/');\n\nfunction ChatArea() {\n  _s();\n\n  const [msg, setMsg] = useState('');\n  const [disableButton, setDisableButton] = useState(false);\n  const [msgsHistory, setMsgsHistory] = useState([]);\n  const [clickedUserId, setClickedUserId] = useState('');\n  const [loggedInUserId, setLoggedInUserUserId] = useState('');\n  const [roomName, setRoomName] = useState('');\n  const clickedUser = useSelector(state => state.clickedUser.user);\n  const loggedInUser = useSelector(state => state.user.data.data.user);\n\n  const onChange = e => {\n    if (e.target.value.length === 0) {\n      setDisableButton(true);\n    } else {\n      setDisableButton(false);\n      setMsg(e.target.value);\n    }\n  };\n\n  useEffect(() => {\n    const clickedUserUserId = clickedUser === null || clickedUser === void 0 ? void 0 : clickedUser.userId;\n    if (typeof clickedUserUserId === 'undefined') return;else {\n      const loggedInUserUserId = loggedInUser.userId;\n      let roomName = clickedUserUserId + '_' + loggedInUserUserId;\n      if (clickedUserId === clickedUserUserId) setClickedUserId(clickedUserUserId);\n      setLoggedInUserUserId(loggedInUserUserId);\n      setRoomName(roomName);\n      socket.emit('roomNameToJoin', roomName);\n    }\n  }, [clickedUser]);\n\n  const onSend = e => {\n    socket.emit('message', msg);\n    setMsg('');\n  };\n\n  socket.on('messageToUser', message => {\n    setMsgsHistory([...msgsHistory, message]);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-area\",\n    children: [/*#__PURE__*/_jsxDEV(ChatProfileBar, {\n      user: clickedUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatAreaMessages, {\n      msgs: msgsHistory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatAreaInput, {\n      onSend: onSend,\n      msg: msg,\n      onChange: onChange,\n      disable: disableButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChatArea, \"gzAMiUXuDsQEuJrDdQaaeYef6eI=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = ChatArea;\nexport default ChatArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatArea\");","map":{"version":3,"sources":["/Users/manish./Desktop/WebDev/whatsapp-socketio-master/client/src/components/ChatArea.js"],"names":["React","useState","useEffect","ChatProfileBar","ChatAreaMessages","ChatAreaInput","io","useSelector","socket","ChatArea","msg","setMsg","disableButton","setDisableButton","msgsHistory","setMsgsHistory","clickedUserId","setClickedUserId","loggedInUserId","setLoggedInUserUserId","roomName","setRoomName","clickedUser","state","user","loggedInUser","data","onChange","e","target","value","length","clickedUserUserId","userId","loggedInUserUserId","emit","onSend","on","message"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport ChatProfileBar from './ChatProfileBar';\nimport ChatAreaMessages from './ChatAreaMessages';\nimport ChatAreaInput from './ChatAreaInput';\nimport { io } from 'socket.io-client';\nimport { useSelector } from 'react-redux';\nconst socket = io('http://localhost:9000/');\n\nfunction ChatArea() {\n  const [msg, setMsg] = useState('');\n  const [disableButton, setDisableButton] = useState(false);\n  const [msgsHistory, setMsgsHistory] = useState([]);\n  const [clickedUserId, setClickedUserId] = useState('');\n  const [loggedInUserId, setLoggedInUserUserId] = useState('');\n  const [roomName, setRoomName] = useState('')\n\n  const clickedUser = useSelector((state) => state.clickedUser.user);\n  const loggedInUser = useSelector((state) => state.user.data.data.user);\n\n  const onChange = (e) => {\n    if (e.target.value.length === 0) {\n      setDisableButton(true);\n    } else {\n      setDisableButton(false);\n\n      setMsg(e.target.value);\n    }\n  };\n  useEffect(() => {\n    const clickedUserUserId = clickedUser?.userId;\n    if (typeof clickedUserUserId === 'undefined') return;\n    else {\n      const loggedInUserUserId = loggedInUser.userId;\n\n      \n      let roomName = clickedUserUserId + '_' + loggedInUserUserId;\n\n     if(clickedUserId===clickedUserUserId)\n\n      setClickedUserId(clickedUserUserId);\n      setLoggedInUserUserId(loggedInUserUserId);\n      setRoomName(roomName);\n      socket.emit('roomNameToJoin', roomName);\n    }\n  }, [clickedUser]);\n\n  const onSend = (e) => {\n    socket.emit('message', msg);\n    setMsg('');\n  };\n\n  socket.on('messageToUser', (message) => {\n    setMsgsHistory([...msgsHistory, message]);\n  });\n  return (\n    <div className=\"chat-area\">\n      <ChatProfileBar user={clickedUser} />\n      <ChatAreaMessages msgs={msgsHistory} />\n      <ChatAreaInput\n        onSend={onSend}\n        msg={msg}\n        onChange={onChange}\n        disable={disableButton}\n      />\n    </div>\n  );\n}\n\nexport default ChatArea;\n"]},"metadata":{},"sourceType":"module"}