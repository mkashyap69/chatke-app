{"ast":null,"code":"import axios from 'axios';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: 'USER_LOGIN_START'\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('http://localhost:9000/api/v1/users/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: 'USER_LOGIN_SUCCESS',\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'USER_LOGIN_FAILURE',\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signup = userData => async dispatch => {\n  try {\n    dispatch({\n      type: 'USER_SIGNUP_START'\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('http://localhost:9000/api/v1/users/signup', userData, config);\n    dispatch({\n      type: 'USER_SIGNUP_SUCCESS',\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'USER_SIGNUP_FAILURE',\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserByUserId = userId => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: 'GET_USER_START'\n    }); // cancelToken and source declaration\n\n    let source = axios.CancelToken.source(); // save the new request for cancellation\n\n    const {\n      user\n    } = getState();\n    const config = {\n      cancelToken: source.token,\n      headers: {\n        Authorization: `Bearer ${user.data.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`http://localhost:9000/api/v1/users/${userId}`, config);\n    source && source.cancel('Operation canceled due to new request.');\n    dispatch({\n      type: 'GET_USER_SUCCESS',\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'GET_USER_FAILURE',\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const ClickedUser = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: 'GET_CLICKED_USER_START'\n    });\n    dispatch({\n      type: 'GET_CLICKED_USER_SUCCESS',\n      payload: user\n    });\n  } catch (error) {\n    dispatch({\n      type: 'GET_CLICKED_USER_FAILURE',\n      payload: 'Error'\n    });\n  }\n};\nexport const removeClickedUser = () => async dispatch => {\n  console.log('hi');\n\n  try {\n    dispatch({\n      type: 'REMOVE_CLICKED_USER_START'\n    });\n    dispatch({\n      type: 'REMOVE_CLICKED_USER_SUCCESS'\n    });\n  } catch (error) {\n    dispatch({\n      type: 'REMOVE_CLICKED_USER_FAILURE',\n      payload: 'Error'\n    });\n  }\n};\nexport const logout = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: 'LOGOUT_START'\n    });\n    dispatch({\n      type: 'LOGOUT_SUCCESS'\n    });\n  } catch (error) {\n    dispatch({\n      type: 'LOGOUT_FAILURE'\n    });\n  }\n};","map":{"version":3,"sources":["/Users/manish./Desktop/WebDev/whatsapp-socketio/client/src/redux/actions/userActions.js"],"names":["axios","login","email","password","dispatch","type","config","headers","data","post","payload","error","response","message","signup","userData","getUserByUserId","userId","getState","source","CancelToken","user","cancelToken","token","Authorization","get","cancel","ClickedUser","removeClickedUser","console","log","logout"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: 'USER_LOGIN_START',\n    });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      'http://localhost:9000/api/v1/users/login',\n      { email, password },\n      config\n    );\n\n    dispatch({\n      type: 'USER_LOGIN_SUCCESS',\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: 'USER_LOGIN_FAILURE',\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const signup = (userData) => async (dispatch) => {\n  try {\n    dispatch({\n      type: 'USER_SIGNUP_START',\n    });\n\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      'http://localhost:9000/api/v1/users/signup',\n      userData,\n      config\n    );\n\n    dispatch({\n      type: 'USER_SIGNUP_SUCCESS',\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: 'USER_SIGNUP_FAILURE',\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getUserByUserId = (userId) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: 'GET_USER_START',\n    });\n\n    // cancelToken and source declaration\n\n    let source = axios.CancelToken.source();\n\n    // save the new request for cancellation\n\n    const { user } = getState();\n\n    const config = {\n      cancelToken: source.token,\n      headers: {\n        Authorization: `Bearer ${user.data.token}`,\n      },\n    };\n\n    const { data } = await axios.get(\n      `http://localhost:9000/api/v1/users/${userId}`,\n      config\n    );\n    source && source.cancel('Operation canceled due to new request.');\n    dispatch({\n      type: 'GET_USER_SUCCESS',\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: 'GET_USER_FAILURE',\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const ClickedUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: 'GET_CLICKED_USER_START',\n    });\n\n    dispatch({\n      type: 'GET_CLICKED_USER_SUCCESS',\n      payload: user,\n    });\n  } catch (error) {\n    dispatch({\n      type: 'GET_CLICKED_USER_FAILURE',\n      payload: 'Error',\n    });\n  }\n};\n\nexport const removeClickedUser = () => async (dispatch) => {\n  console.log('hi');\n  try {\n    dispatch({\n      type: 'REMOVE_CLICKED_USER_START',\n    });\n\n    dispatch({\n      type: 'REMOVE_CLICKED_USER_SUCCESS',\n    });\n  } catch (error) {\n    dispatch({\n      type: 'REMOVE_CLICKED_USER_FAILURE',\n      payload: 'Error',\n    });\n  }\n};\n\nexport const logout = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: 'LOGOUT_START',\n    });\n\n    dispatch({\n      type: 'LOGOUT_SUCCESS',\n    });\n  } catch (error) {\n    dispatch({\n      type: 'LOGOUT_FAILURE',\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}