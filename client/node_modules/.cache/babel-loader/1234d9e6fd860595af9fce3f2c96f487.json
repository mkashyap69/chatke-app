{"ast":null,"code":"var _jsxFileName = \"/Users/manish./Desktop/WebDev/whatsapp-socketio/client/src/components/FriendsBar.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { Divider } from '@chakra-ui/layout';\nimport React, { useEffect, useState } from 'react';\nimport Friends from './Friends';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ClickedUser } from '../redux/actions/userActions';\nimport { getMsgHistory } from '../redux/actions/msgsActions';\nimport { getRecentFriendsList, addToRecentFriendsList } from '../redux/actions/friendsListAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FriendsBar({\n  onClose\n}) {\n  _s();\n\n  const searchedUser = useSelector(state => {\n    var _state$searchedUser;\n\n    return (_state$searchedUser = state.searchedUser) === null || _state$searchedUser === void 0 ? void 0 : _state$searchedUser.user;\n  });\n  const clickedUser = useSelector(state => state.clickedUser.user);\n  const [user, setUser] = useState({});\n  const dispatch = useDispatch();\n  const loggedInUser = useSelector(state => state.user.data.data.user);\n  const recentFriendsList = useSelector(state => {\n    var _state$recentFriendsL, _state$recentFriendsL2;\n\n    return (_state$recentFriendsL = state.recentFriendsList) === null || _state$recentFriendsL === void 0 ? void 0 : (_state$recentFriendsL2 = _state$recentFriendsL.data) === null || _state$recentFriendsL2 === void 0 ? void 0 : _state$recentFriendsL2.data.recentlyClickedUsers;\n  });\n  const [roomName, setRoomName] = useState(null);\n  useEffect(() => {\n    dispatch(getRecentFriendsList());\n\n    if (clickedUser) {\n      dispatch(addToRecentFriendsList(clickedUser));\n    }\n  }, [clickedUser]);\n  useEffect(() => {\n    if (!searchedUser) {\n      setUser(null);\n    } else {\n      setUser(searchedUser.data);\n    }\n  }, [searchedUser]);\n  useEffect(() => {\n    if (clickedUser && roomName) {\n      dispatch(getMsgHistory(roomName));\n    }\n  }, [clickedUser, roomName]);\n\n  const onClickHandlerSearch = () => {\n    dispatch(ClickedUser(searchedUser.data));\n    onClose();\n    const loggedInUserUserId = loggedInUser.userId;\n    let roomName = parseInt(loggedInUserUserId, 36) * parseInt(searchedUser.data.userId, 36);\n    setRoomName(roomName);\n  };\n\n  const onClickHandlerRecent = recentFriend => {\n    dispatch(ClickedUser(recentFriend));\n    onClose();\n    const loggedInUserUserId = loggedInUser.userId;\n    let roomName = parseInt(loggedInUserUserId, 36) * parseInt(recentFriend.userId, 36);\n    setRoomName(roomName);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"friends-bar\",\n    children: user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"friends-bar-single1\",\n      onClick: onClickHandlerSearch,\n      children: [/*#__PURE__*/_jsxDEV(Friends, {\n        name: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Recent Chats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), recentFriendsList ? recentFriendsList.map(recentFriend => {\n        /*#__PURE__*/\n        _jsxDEV(\"div\", {\n          className: \"friends-bar-single1\",\n          onClick: () => onClickHandlerRecent(recentFriend),\n          children: [/*#__PURE__*/_jsxDEV(Friends, {\n            name: recentFriend.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this);\n      }) : 'No recent chats. Start texting!!!']\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FriendsBar, \"4LEvcbDqlYdNmt5E15/9qEJFIEU=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useSelector, useSelector];\n});\n\n_c = FriendsBar;\nexport default FriendsBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendsBar\");","map":{"version":3,"sources":["/Users/manish./Desktop/WebDev/whatsapp-socketio/client/src/components/FriendsBar.js"],"names":["Divider","React","useEffect","useState","Friends","useSelector","useDispatch","ClickedUser","getMsgHistory","getRecentFriendsList","addToRecentFriendsList","FriendsBar","onClose","searchedUser","state","user","clickedUser","setUser","dispatch","loggedInUser","data","recentFriendsList","recentlyClickedUsers","roomName","setRoomName","onClickHandlerSearch","loggedInUserUserId","userId","parseInt","onClickHandlerRecent","recentFriend","name","map"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport { Divider } from '@chakra-ui/layout';\nimport React, { useEffect, useState } from 'react';\nimport Friends from './Friends';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ClickedUser } from '../redux/actions/userActions';\nimport { getMsgHistory } from '../redux/actions/msgsActions';\nimport {\n  getRecentFriendsList,\n  addToRecentFriendsList,\n} from '../redux/actions/friendsListAction';\n\nfunction FriendsBar({ onClose }) {\n  const searchedUser = useSelector((state) => state.searchedUser?.user);\n  const clickedUser = useSelector((state) => state.clickedUser.user);\n  const [user, setUser] = useState({});\n  const dispatch = useDispatch();\n  const loggedInUser = useSelector((state) => state.user.data.data.user);\n  const recentFriendsList = useSelector(\n    (state) => state.recentFriendsList?.data?.data.recentlyClickedUsers\n  );\n  const [roomName, setRoomName] = useState(null);\n\n  useEffect(() => {\n    dispatch(getRecentFriendsList());\n\n    if (clickedUser) {\n      dispatch(addToRecentFriendsList(clickedUser));\n    }\n  }, [clickedUser]);\n\n  useEffect(() => {\n    if (!searchedUser) {\n      setUser(null);\n    } else {\n      setUser(searchedUser.data);\n    }\n  }, [searchedUser]);\n\n  useEffect(() => {\n    if (clickedUser && roomName) {\n      dispatch(getMsgHistory(roomName));\n    }\n  }, [clickedUser, roomName]);\n\n  const onClickHandlerSearch = () => {\n    dispatch(ClickedUser(searchedUser.data));\n    onClose();\n    const loggedInUserUserId = loggedInUser.userId;\n\n    let roomName =\n      parseInt(loggedInUserUserId, 36) * parseInt(searchedUser.data.userId, 36);\n    setRoomName(roomName);\n  };\n\n  const onClickHandlerRecent = (recentFriend) => {\n    dispatch(ClickedUser(recentFriend));\n    onClose();\n    const loggedInUserUserId = loggedInUser.userId;\n\n    let roomName =\n      parseInt(loggedInUserUserId, 36) * parseInt(recentFriend.userId, 36);\n    setRoomName(roomName);\n  };\n\n  return (\n    <div className=\"friends-bar\">\n      {user ? (\n        <div className=\"friends-bar-single1\" onClick={onClickHandlerSearch}>\n          <Friends name={user.name} />\n          <Divider />\n        </div>\n      ) : (\n        <>\n          <p>Recent Chats</p>\n          {recentFriendsList\n            ? recentFriendsList.map((recentFriend) => {\n                <div\n                  className=\"friends-bar-single1\"\n                  onClick={() => onClickHandlerRecent(recentFriend)}\n                >\n                  <Friends name={recentFriend.name} />\n                  <Divider />\n                </div>;\n              })\n            : 'No recent chats. Start texting!!!'}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default FriendsBar;\n"]},"metadata":{},"sourceType":"module"}