{"version":3,"sources":["components/Friends.js","redux/actions/userActions.js","redux/actions/msgsActions.js","redux/actions/friendsListAction.js","components/FriendsBar.js","components/ProfileBar.js","components/SearchBar.js","components/SideBarDrawer.js","components/ChatProfileBar.js","components/IncomingMsg.js","components/OutgoingMsg.js","components/ChatAreaMessages.js","components/ChatAreaInput.js","components/ChatArea.js","components/ChatPage.js","components/LoginModal.js","components/LoginButton.js","components/SignUpModal.js","components/SignUpButton.js","components/LoginPage.js","App.js","redux/reducers/userReducers.js","redux/reducers/combineReducers.js","redux/reducers/msgsReducers.js","redux/reducers/friendsChattedWithReducer.js","redux/store.js","index.js"],"names":["Friends","name","lastMessage","className","ClickedUser","user","dispatch","getState","a","type","payload","error","saveMsgsHistory","msgsHistory","roomName","loggedInUser","clickedUser","config","headers","Authorization","data","token","console","log","axios","post","response","message","getMsgHistory","get","getRecentFriendsList","FriendsBar","onClose","searchedUser","useSelector","state","useState","setUser","useDispatch","recentFriendsList","recentlyClickedUsers","setRoomName","useEffect","addToRecentFriendsList","onClick","loggedInUserUserId","userId","parseInt","style","fontWeight","color","map","recentFriend","onClickHandlerRecent","_id","ProfileBar","SearchBar","search","setSearch","searchedUserError","size","value","placeholder","onChange","e","target","width","Search2","boxSize","mb","mr","source","CancelToken","cancelToken","cancel","SideBarDrawer","useDisclosure","isOpen","onOpen","btnRef","React","useRef","current","focus","ref","colorScheme","isFullWidth","variant","label","bg","fontSize","defaultIsOpen","placement","finalFocusRef","closeOnEsc","ChatProfileBar","rightIcon","IncomingMsg","msg","current_time","Math","random","OutgoingMsg","ChatAreaMessages","msgs","divRef","scrollIntoView","behavior","outgoing","ChatAreaInput","props","onSend","socket","io","ChatArea","setMsg","setMsgsHistory","retrievedMsgsHistoryState","setRetrievedMsgsHistoryState","retrievedMsgsHistory","on","off","clickedUserUserId","emit","moment","format","ChatPage","LoginModal","email","setEmail","password","setPassword","toast","useToast","show","setShow","loading","indexOf","title","status","isClosable","pb","mt","isRequired","pr","h","isLoading","login","LoginButton","SignUpModal","setName","setUserId","history","useHistory","push","loadingText","userData","SignUpButton","LoginPage","connect","path","exact","component","render","to","initialState","combineReducers","action","composeEnhancers","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.68202406.chunk.js","sourcesContent":["import React from 'react';\nimport {Avatar} from '@chakra-ui/react'\n\nfunction Friends({name,lastMessage}) {\n  return (\n    <div className=\"friends-bar-single\">\n      <Avatar name={name}/>\n      <div className=\"friends-bar-single--text\">\n        <span className=\"friends-bar-single--textName\">{name}</span>\n        <span>{lastMessage}</span>\n      </div>\n    </div>\n  );\n}\n\nexport default Friends;\n","import axios from 'axios';\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: 'USER_LOGIN_START',\n    });\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      'https://whatsapp-socketio-react.herokuapp.com/api/v1/users/login',\n      { email, password },\n      config\n    );\n\n    dispatch({\n      type: 'USER_LOGIN_SUCCESS',\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: 'USER_LOGIN_FAILURE',\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const signup = (userData) => async (dispatch) => {\n  try {\n    dispatch({\n      type: 'USER_SIGNUP_START',\n    });\n\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      'https://whatsapp-socketio-react.herokuapp.com/api/v1/users/signup',\n      userData,\n      config\n    );\n\n    dispatch({\n      type: 'USER_SIGNUP_SUCCESS',\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: 'USER_SIGNUP_FAILURE',\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getUserByUserId = (userId) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: 'GET_USER_START',\n    });\n\n    // cancelToken and source declaration\n\n    let source = axios.CancelToken.source();\n\n    // save the new request for cancellation\n\n    const { user } = getState();\n\n    const config = {\n      cancelToken: source.token,\n      headers: {\n        Authorization: `Bearer ${user.data.token}`,\n      },\n    };\n\n    const { data } = await axios.get(\n      `https://whatsapp-socketio-react.herokuapp.com/api/v1/users/${userId}`,\n      config\n    );\n    source && source.cancel('Operation canceled due to new request.');\n    dispatch({\n      type: 'GET_USER_SUCCESS',\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: 'GET_USER_FAILURE',\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const ClickedUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: 'GET_CLICKED_USER_START',\n    });\n\n    dispatch({\n      type: 'GET_CLICKED_USER_SUCCESS',\n      payload: user,\n    });\n  } catch (error) {\n    dispatch({\n      type: 'GET_CLICKED_USER_FAILURE',\n      payload: 'Error',\n    });\n  }\n};\n\nexport const removeClickedUser = () => (dispatch) => {\n  console.log('hi');\n  try {\n    dispatch({\n      type: 'REMOVE_CLICKED_USER_START',\n    });\n\n    dispatch({\n      type: 'REMOVE_CLICKED_USER_SUCCESS',\n    });\n  } catch (error) {\n    dispatch({\n      type: 'REMOVE_CLICKED_USER_FAILURE',\n      payload: 'Error',\n    });\n  }\n};\n\nexport const logout = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: 'LOGOUT_START',\n    });\n\n    dispatch({\n      type: 'LOGOUT_SUCCESS',\n    });\n  } catch (error) {\n    dispatch({\n      type: 'LOGOUT_FAILURE',\n    });\n  }\n};\n","import axios from 'axios';\n\nexport const saveMsgsHistory = (\n  msgsHistory,\n  roomName,\n  loggedInUser,\n  clickedUser\n) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: 'SAVE_MSGS_HISTORY_START',\n    });\n    const { user } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${user.data.token}`,\n      },\n    };\n    console.log(roomName);\n    const { data } = await axios.post(\n      'https://whatsapp-socketio-react.herokuapp.com/api/v1/msgs',\n      {\n        roomName,\n        loggedInUser,\n        clickedUser,\n        msgsHistory,\n      },\n      config\n    );\n    dispatch({\n      type: 'SAVE_MSGS_HISTORY_SUCCESS',\n      payload: data.data.msgsHistory,\n    });\n  } catch (error) {\n    dispatch({\n      type: 'SAVE_MSGS_HISTORY_FAILURE',\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getMsgHistory = (roomName) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: 'GET_MSGS_HISTORY_START',\n    });\n\n    const { user } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${user.data.token}`,\n      },\n    };\n    const { data } = await axios.get(\n      `https://whatsapp-socketio-react.herokuapp.com/api/v1/msgs/${roomName}`,\n      config\n    );\n    dispatch({\n      type: 'GET_MSGS_HISTORY_SUCCESS',\n      payload: data.data.msgsHistory,\n    });\n  } catch (error) {\n    dispatch({\n      type: 'GET_MSGS_HISTORY_FAILURE',\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","import axios from 'axios';\n\nexport const getRecentFriendsList = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: 'GET_FRIENDS_CHATTED_WITH_START',\n    });\n\n    const { user } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${user.data.token}`,\n      },\n    };\n\n    const { data } = await axios.get(\n      'https://whatsapp-socketio-react.herokuapp.com/api/v1/friends/',\n      config\n    );\n\n    dispatch({\n      type: 'GET_FRIENDS_CHATTED_WITH_SUCCESS',\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: 'GET_FRIENDS_CHATTED_WITH_FAILURE',\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const addToRecentFriendsList = (clickedUser) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: 'ADD_TO_RECENT_START',\n    });\n\n    const { user } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${user.data.token}`,\n      },\n    };\n\n    const { data } = await axios.post(\n      'https://whatsapp-socketio-react.herokuapp.com/api/v1/friends/',\n      { clickedUser },\n      config\n    );\n\n    dispatch({\n      type: 'ADD_TO_RECENT_SUCCESS',\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: 'ADD_TO_RECENT_FAILURE',\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Divider } from '@chakra-ui/layout';\nimport React, { useEffect, useState } from 'react';\nimport Friends from './Friends';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ClickedUser } from '../redux/actions/userActions';\nimport { getMsgHistory } from '../redux/actions/msgsActions';\nimport {\n  getRecentFriendsList,\n  addToRecentFriendsList,\n} from '../redux/actions/friendsListAction';\n\nfunction FriendsBar({ onClose }) {\n  const searchedUser = useSelector((state) => state.searchedUser?.user);\n  const clickedUser = useSelector((state) => state.clickedUser.user);\n  const [user, setUser] = useState({});\n  const dispatch = useDispatch();\n  const loggedInUser = useSelector((state) => state.user.data.data.user);\n  const recentFriendsList = useSelector(\n    (state) => state.recentFriendsList?.data?.data?.recentlyClickedUsers\n  );\n  const [roomName, setRoomName] = useState(null);\n\n  useEffect(() => {\n    dispatch(getRecentFriendsList());\n\n    if (clickedUser) {\n      dispatch(addToRecentFriendsList(clickedUser));\n    }\n  }, [clickedUser]);\n\n  useEffect(() => {\n    if (!searchedUser) {\n      setUser(null);\n    } else {\n      setUser(searchedUser.data);\n    }\n  }, [searchedUser]);\n\n  useEffect(() => {\n    if (clickedUser && roomName) {\n      dispatch(getMsgHistory(roomName));\n    }\n  }, [clickedUser, roomName]);\n\n  const onClickHandlerSearch = () => {\n    dispatch(ClickedUser(searchedUser.data));\n    onClose();\n    const loggedInUserUserId = loggedInUser.userId;\n\n    let roomName =\n      parseInt(loggedInUserUserId, 36) * parseInt(searchedUser.data.userId, 36);\n    setRoomName(roomName);\n    setUser(null);\n  };\n\n  const onClickHandlerRecent = (recentFriend) => {\n    dispatch(ClickedUser(recentFriend));\n    onClose();\n    const loggedInUserUserId = loggedInUser.userId;\n\n    let roomName =\n      parseInt(loggedInUserUserId, 36) * parseInt(recentFriend.userId, 36);\n    setRoomName(roomName);\n    setUser(null);\n  };\n  return (\n    <div className=\"friends-bar\">\n      <div className=\"friends-bar-single1\" onClick={onClickHandlerSearch}>\n        <Friends name={user?.name} />\n        <Divider />\n      </div>\n\n      <>\n        <h2 style={{ fontWeight: 'bolder', color: '#79c7c5' }}>Recent Chats</h2>\n        {recentFriendsList\n          ? recentFriendsList.map((recentFriend) => (\n              <div\n                className=\"friends-bar-single1\"\n                key={recentFriend._id}\n                onClick={() => onClickHandlerRecent(recentFriend)}\n              >\n                <Friends name={recentFriend.name} />\n                <Divider />\n              </div>\n            ))\n          : 'No recent chats. Start texting!!!'}\n      </>\n    </div>\n  );\n}\n\nexport default FriendsBar;\n","import { Avatar } from '@chakra-ui/avatar';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\n\n\nfunction ProfileBar() {\n  const user = useSelector((state) => state.user?.data?.data.user);\n  \n  return (\n    <div className=\"profile-bar\">\n      <div className=\"profile-barAvatar\">\n        <Avatar name={user.name} />\n      </div>\n      <div className=\"profile-bar--text\">\n        <span>{user.name}</span>\n      </div>\n      \n    </div>\n  );\n}\n\nexport default ProfileBar;\n","import { InputGroup, InputRightElement } from '@chakra-ui/input';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUserByUserId } from '../redux/actions/userActions';\nimport { Search2Icon } from '@chakra-ui/icons';\n\nfunction SearchBar() {\n  const dispatch = useDispatch();\n  const [search, setSearch] = useState('');\n  const searchedUserError = useSelector((state) => state.searchedUser?.error);\n\n  const handleClick = (e) => {\n    if (search === '') return;\n    dispatch(getUserByUserId(search));\n    setSearch('');\n  };\n  return (\n    <div className=\"search-bar\">\n      <InputGroup size=\"md\">\n        <input\n          type=\"text\"\n          value={search}\n          className=\"search-barInput\"\n          placeholder={\n            searchedUserError ? 'NO USER FOUND' : 'Search by username'\n          }\n          onChange={(e) => setSearch(e.target.value)}\n        />\n        <InputRightElement width=\"4.5rem\">\n          <Search2Icon\n            boxSize={4}\n            mb=\"0.6rem\"\n            mr=\"-2rem\"\n            onClick={handleClick}\n          />\n        </InputRightElement>\n      </InputGroup>\n    </div>\n  );\n}\n\nexport default SearchBar;\n","import React, { useEffect } from 'react';\n\nimport FriendsBar from './FriendsBar';\nimport ProfileBar from './ProfileBar';\nimport SearchBar from './SearchBar';\n\nimport { Divider } from '@chakra-ui/layout';\nimport {\n  Drawer,\n  DrawerBody,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerCloseButton,\n  useDisclosure,\n  Button,\n  Tooltip,\n} from '@chakra-ui/react';\nimport { Search2Icon } from '@chakra-ui/icons';\n\nfunction SideBarDrawer() {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const btnRef = React.useRef();\n\n  useEffect(() => {\n    btnRef.current.focus();\n  }, []);\n\n  return (\n    <div className=\"side-bar\">\n      <div className=\"side-bar--button\">\n        <Button\n          ref={btnRef}\n          colorScheme=\"teal\"\n          onClick={onOpen}\n          isFullWidth={true}\n          variant=\"ghost\"\n          size=\"xs\"\n        >\n          <Tooltip\n            label=\"Search Friends\"\n            bg=\"white\"\n            fontSize=\"md\"\n            color=\"black\"\n            defaultIsOpen\n          >\n            <Search2Icon boxSize={4} />\n          </Tooltip>\n        </Button>\n      </div>\n      <Drawer\n        isOpen={isOpen}\n        placement=\"left\"\n        onClose={onClose}\n        finalFocusRef={btnRef}\n        size=\"sm\"\n        closeOnEsc={true}\n      >\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerCloseButton />\n          <DrawerBody>\n            <ProfileBar />\n            <Divider />\n\n            <SearchBar />\n\n            <FriendsBar onClose={onClose} />\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </div>\n  );\n}\n\nexport default SideBarDrawer;\n","import React from 'react';\nimport { Avatar } from '@chakra-ui/avatar';\nimport { AiOutlineLogout } from 'react-icons/ai';\nimport { Button } from '@chakra-ui/react';\nimport { useDispatch } from 'react-redux';\nimport { logout, removeClickedUser } from '../redux/actions/userActions';\n\nfunction ChatProfileBar({ user, SideBarDrawer }) {\n  const dispatch = useDispatch();\n  const handleLogout = () => {\n    dispatch(removeClickedUser());\n    dispatch(logout());\n  };\n  return (\n    <div className=\"profile-bar--chat\">\n      <div className=\"profile-barLeft--chat\">\n        <SideBarDrawer />\n        <div className=\"profile-barAvatar--chat\">\n          <Avatar name={user?.name} />\n        </div>\n        <div className=\"profile-bar--text\">\n          <span>{user?.name}</span>\n        </div>\n      </div>\n      <div className=\"profile-barMenu\">\n        <Button\n          rightIcon={<AiOutlineLogout />}\n          colorScheme=\"teal\"\n          variant=\"link\"\n          onClick={handleLogout}\n        >\n          Logout\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default ChatProfileBar;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nfunction IncomingMsg({ msg }) {\n  const loggedInUser = useSelector((state) => state.user.data.data.user);\n  const clickedUser = useSelector((state) => state?.clickedUser?.user);\n\n  return (\n    <>\n      {loggedInUser.userId === msg.user ? null : (\n        <div className=\"incoming\" key={Math.random()}>\n          <div key={Math.random()} className=\"bubble\">\n            <span className=\"msg_sender\">\n              {loggedInUser.userId === msg.user ? 'You' : clickedUser.name}\n            </span>\n            <div className=\"msg_part\">{msg.message}</div>\n            <span className=\"message-time\">{msg.current_time}</span>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default IncomingMsg;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nfunction OutgoingMsg({ msg }) {\n  const loggedInUser = useSelector((state) => state.user.data.data.user);\n\n  return (\n    <>\n      {loggedInUser.userId !== msg.user ? null : (\n        <div className=\"outgoing\" key={Math.random()}>\n          <div key={Math.random()} className=\"bubble\">\n            <span className=\"msg_sender\">\n              {loggedInUser.userId === msg.user ? 'You' : loggedInUser.name}\n            </span>\n            <div className=\"msg_part\">{msg.message}</div>\n            <span className=\"message-time\">{msg.current_time}</span>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default OutgoingMsg;\n","import React, { useRef, useEffect } from 'react';\nimport IncomingMsg from './IncomingMsg';\nimport OutgoingMsg from './OutgoingMsg';\n\nfunction ChatAreaMessages({ msgs }) {\n  const divRef = useRef();\n  useEffect(() => {\n    divRef.current.scrollIntoView({ behavior: 'smooth' });\n  }, [msgs]);\n  return (\n    <div className=\"chat-area--messages\">\n      {msgs.map((msg) => {\n        return msg.outgoing === true ? (\n          <OutgoingMsg key={Math.random()} msg={msg} />\n        ) : (\n          <IncomingMsg key={Math.random()} msg={msg} />\n        );\n      })}\n      <div ref={divRef} />\n    </div>\n  );\n}\n\nexport default ChatAreaMessages;\n\n//<div ref={divRef} />\n//<IncomingMsg msgs={props.incomingMsgsHistory} />\n//     <OutgoingMsg msgs={props.outgoingMsgsHistory} />\n\n//const divRef = useRef();\n\n//  useEffect(() => {\n//    divRef.current.scrollIntoView({ behavior: 'smooth' });\n// }, []);\n","import React from 'react';\nimport { IoMdArrowDroprightCircle } from 'react-icons/io';\n\nfunction ChatAreaInput(props) {\n  return (\n    <div className=\"chat-area--inputArea\">\n      <input\n        type=\"text\"\n        value={props.msg}\n        placeholder=\"Type a message...\"\n        className=\"chat-area--input\"\n        onChange={props.onChange}\n      />\n      <button\n        onClick={props.onSend}\n        type=\"submit\"\n        className=\"chat-area--button\"\n      >\n        <IoMdArrowDroprightCircle className=\"chat-area--buttonIcon\" />\n      </button>\n    </div>\n  );\n}\n\nexport default ChatAreaInput;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from 'react';\nimport ChatProfileBar from './ChatProfileBar';\nimport ChatAreaMessages from './ChatAreaMessages';\nimport ChatAreaInput from './ChatAreaInput';\nimport { io } from 'socket.io-client';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\nimport { getMsgHistory, saveMsgsHistory } from '../redux/actions/msgsActions';\nimport { getRecentFriendsList } from '../redux/actions/friendsListAction';\n\nconst socket = io('https://whatsapp-socketio-react.herokuapp.com');\n\nfunction ChatArea({ SideBarDrawer }) {\n  const [msg, setMsg] = useState('');\n  const [msgsHistory, setMsgsHistory] = useState([]);\n  const [roomName, setRoomName] = useState(null);\n  const [retrievedMsgsHistoryState, setRetrievedMsgsHistoryState] = useState(\n    []\n  );\n  const dispatch = useDispatch();\n\n  const clickedUser = useSelector((state) => state.clickedUser.user);\n  const loggedInUser = useSelector((state) => state.user.data.data.user);\n  const retrievedMsgsHistory = useSelector((state) => state.msgsHistory?.data);\n\n  useEffect(() => {\n    dispatch(getRecentFriendsList());\n  }, []);\n\n  useEffect(() => {\n    socket.on('messageToUser', ({ message, user, current_time }) => {\n      setMsgsHistory([\n        ...msgsHistory,\n        { message, user, current_time, outgoing: false },\n      ]);\n      dispatch(\n        saveMsgsHistory(\n          { message, user, current_time, outgoing: false },\n          roomName,\n          loggedInUser?._id,\n          clickedUser?._id\n        )\n      );\n    });\n\n    return () => {\n      socket.off('messageToUser');\n    };\n  }, [msgsHistory, roomName]);\n\n  useEffect(() => {\n    if (clickedUser && roomName) {\n      dispatch(getMsgHistory(roomName));\n    }\n  }, [clickedUser, roomName, msgsHistory]);\n\n  useEffect(() => {\n    setRetrievedMsgsHistoryState(retrievedMsgsHistory);\n  }, [retrievedMsgsHistory]);\n\n  useEffect(() => {\n    const clickedUserUserId = clickedUser?.userId;\n    if (typeof clickedUserUserId === 'undefined') return;\n    else {\n      const loggedInUserUserId = loggedInUser.userId;\n\n      let roomName =\n        parseInt(loggedInUserUserId, 36) * parseInt(clickedUserUserId, 36);\n      setRoomName(roomName);\n      socket.emit('roomNameToJoin', roomName);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [clickedUser]);\n\n  const onSend = (e) => {\n    if (msg === '') {\n      return;\n    }\n\n    let current_time = moment().format('HH:mm');\n\n    setMsgsHistory([\n      ...msgsHistory,\n\n      {\n        message: msg,\n        user: loggedInUser.userId,\n        current_time,\n        outgoing: true,\n      },\n    ]);\n    dispatch(\n      saveMsgsHistory(\n        {\n          message: msg,\n          user: loggedInUser.userId,\n          current_time,\n          outgoing: true,\n        },\n        roomName,\n        loggedInUser?._id,\n        clickedUser?._id\n      )\n    );\n    socket.emit('message', { message: msg, user: loggedInUser.userId });\n\n    setMsg('');\n  };\n\n  const onChange = (e) => {\n    setMsg(e.target.value);\n  };\n\n  return (\n    <div className=\"chat-area\">\n      <ChatProfileBar user={clickedUser} SideBarDrawer={SideBarDrawer} />\n      <ChatAreaMessages\n        msgs={retrievedMsgsHistoryState ? retrievedMsgsHistoryState : []}\n      />\n      <ChatAreaInput onSend={onSend} msg={msg} onChange={onChange} />\n    </div>\n  );\n}\n\nexport default ChatArea;\n\n/*\n \n\n\nif (loggedInUser && clickedUser && retrievedMsgsHistory) {\n  let newMsgsHistory = retrievedMsgsHistory.concat(msgsHistory);\n  dispatch(\n    saveMsgsHistory(newMsgsHistory, loggedInUser?._id, clickedUser?._id)\n  );\n}*/\n","import React from 'react';\nimport SideBarDrawer from './SideBarDrawer';\nimport ChatArea from './ChatArea';\n\nconst ChatPage = () => {\n  return (\n    <div className=\"main\">\n      <ChatArea SideBarDrawer={SideBarDrawer} />\n    </div>\n  );\n};\n\nexport default ChatPage;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from 'react';\nimport {\n  InputGroup,\n  InputRightElement,\n  Input,\n  FormControl,\n  FormLabel,\n} from '@chakra-ui/react';\n\nimport {\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n} from '@chakra-ui/modal';\nimport { Button } from '@chakra-ui/button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { login } from '../redux/actions/userActions';\nimport { useHistory } from 'react-router-dom';\nimport { useToast } from '@chakra-ui/toast';\n\nconst LoginModal = ({ isOpen, onClose }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  const toast = useToast();\n\n  const [show, setShow] = React.useState(false);\n  const handleClick = () => setShow(!show);\n\n  const { loading, error } = useSelector((state) => state.user);\n\n  useEffect(() => {\n    if (error) {\n      if (error.indexOf('E11000') > -1) {\n        toast({\n          title: `This userId is already taken`,\n          status: 'error',\n          isClosable: true,\n        });\n      } else {\n        toast({\n          title: `${error}`,\n          status: 'error',\n          isClosable: true,\n        });\n      }\n    }\n  }, [error]);\n\n  const onSubmit = () => {\n    dispatch(login(email, password));\n  };\n\n  return (\n    <div>\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Log In your account</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody pb={6}>\n            <FormControl mt={4} isRequired>\n              <FormLabel>Email Address</FormLabel>\n              <Input\n                placeholder=\"Enter Email Address\"\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </FormControl>\n\n            <FormControl mt={4} isRequired>\n              <FormLabel>Password</FormLabel>\n              <InputGroup size=\"md\">\n                <Input\n                  pr=\"4.5rem\"\n                  type={show ? 'text' : 'password'}\n                  placeholder=\"Enter password\"\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n                <InputRightElement width=\"4.5rem\">\n                  <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n                    {show ? 'Hide' : 'Show'}\n                  </Button>\n                </InputRightElement>\n              </InputGroup>\n            </FormControl>\n          </ModalBody>\n\n          <ModalFooter>\n            <Button\n              isLoading={loading}\n              onClick={onSubmit}\n              colorScheme=\"blue\"\n              mr={3}\n            >\n              Login\n            </Button>\n            <Button onClick={onClose}>Cancel</Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </div>\n  );\n};\n\nexport default LoginModal;\n\n/*if (data?.status === 'Success') {\n      toast({\n        title: 'Login Success.',\n        description: 'You will be redirected to the main page',\n        status: 'success',\n        duration: 2000,\n        isClosable: true,\n      });\n    }\n    \n    \n    const handleKeypress = (e) => {\n    if (e.keyCode === 13) {\n      onSubmit();\n    }\n  };*/\n","import React from 'react';\nimport { Button } from '@chakra-ui/button';\nimport { useDisclosure } from '@chakra-ui/hooks';\nimport LoginModal from './LoginModal';\n\nconst LoginButton = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <div>\n      <Button onClick={onOpen}>Log In</Button>\n      <LoginModal isOpen={isOpen} onClose={onClose} />\n    </div>\n  );\n};\n\nexport default LoginButton;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from 'react';\nimport {\n  InputGroup,\n  InputRightElement,\n  Input,\n  FormControl,\n  FormLabel,\n} from '@chakra-ui/react';\nimport {\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n} from '@chakra-ui/modal';\nimport { Button } from '@chakra-ui/button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { signup } from '../redux/actions/userActions';\nimport { useHistory } from 'react-router-dom';\n\nconst SignUpModal = ({ isOpen, onClose }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [userId, setUserId] = useState('');\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const { loading, data } = useSelector((state) => state.user);\n\n  const [show, setShow] = React.useState(false);\n  const handleClick = () => setShow(!show);\n\n  useEffect(() => {\n    if (data?.data.user) {\n      history.push('/chat');\n    }\n  }, [data]);\n\n  const onSubmit = () => {\n    dispatch(signup({ name, email, password, userId }));\n  };\n  return (\n    <div>\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Create your account</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody pb={6}>\n            <FormControl isRequired>\n              <FormLabel>Name</FormLabel>\n              <Input\n                onChange={(e) => setName(e.target.value)}\n                placeholder=\"Enter Your Name\"\n              />\n            </FormControl>\n\n            <FormControl mt={4} isRequired>\n              <FormLabel>Email Address</FormLabel>\n              <Input\n                onChange={(e) => setEmail(e.target.value)}\n                placeholder=\"Enter Email Address\"\n              />\n            </FormControl>\n            <FormControl mt={4} isRequired>\n              <FormLabel>UserId</FormLabel>\n              <Input\n                onChange={(e) => setUserId(e.target.value)}\n                placeholder=\"Enter User ID\"\n              />\n            </FormControl>\n            <FormControl mt={4} isRequired>\n              <FormLabel>Password</FormLabel>\n              <InputGroup size=\"md\">\n                <Input\n                  pr=\"4.5rem\"\n                  type={show ? 'text' : 'password'}\n                  placeholder=\"Enter password\"\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n                <InputRightElement width=\"4.5rem\">\n                  <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n                    {show ? 'Hide' : 'Show'}\n                  </Button>\n                </InputRightElement>\n              </InputGroup>\n            </FormControl>\n          </ModalBody>\n\n          <ModalFooter>\n            <Button\n              isLoading={loading}\n              loadingText=\"Submitting\"\n              onClick={onSubmit}\n              colorScheme=\"blue\"\n              mr={3}\n            >\n              Save\n            </Button>\n            <Button onClick={onClose}>Cancel</Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </div>\n  );\n};\n\nexport default SignUpModal;\n\n/* if (data?.status === 'Success') {\n      toast({\n        title: 'Signup Success.',\n        description: 'You will be redirected to the main page',\n        status: 'success',\n        duration: 2000,\n        isClosable: true,\n      });\n    }*/\n","import React from 'react';\nimport { Button } from '@chakra-ui/button';\nimport { useDisclosure } from '@chakra-ui/hooks';\nimport SignUpModal from './SignUpModal';\n\nconst SignUpButton = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <div>\n      <Button onClick={onOpen}>Sign Up</Button>\n      <SignUpModal isOpen={isOpen} onClose={onClose} />\n    </div>\n  );\n};\n\nexport default SignUpButton;\n","import React from 'react';\nimport LoginButton from './LoginButton';\nimport SignUpButton from './SignUpButton';\nimport './LoginPage.css'\n\nfunction LoginPage() {\n  return (\n    <div className=\"loginPage\">\n      <LoginButton />\n      <SignUpButton />\n    </div>\n  );\n}\n\nexport default LoginPage;\n","import React from 'react';\nimport './App.css';\nimport ChatPage from './components/ChatPage';\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport LoginPage from './components/LoginPage';\nimport { connect, useSelector } from 'react-redux';\n\nfunction App() {\n  const loggedInUser = useSelector((state) => state.user?.data?.data?.user);\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={LoginPage} />\n        <Route\n          path=\"/chat\"\n          render={() => (loggedInUser ? <ChatPage /> : <Redirect to=\"/\" />)}\n        />\n        <Route component={LoginPage}/>\n      </Switch>\n    </Router>\n  );\n}\nconst mapStateToProps = (state) => {\n  return { user: state?.user?.data?.data.user };\n};\nexport default connect(mapStateToProps)(App);\n","const initialState = {};\n\nexport const userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'USER_LOGIN_START':\n      return { ...state, loading: true, error: '' };\n\n    case 'USER_LOGIN_FAILURE':\n      return { ...state, loading: false, error: action.payload };\n\n    case 'USER_LOGIN_SUCCESS':\n      return { ...state, loading: false, data: action.payload };\n\n    case 'USER_SIGNUP_START':\n      return { ...state, loading: true, error: '' };\n\n    case 'USER_SIGNUP_FAILURE':\n      return { ...state, loading: false, error: action.payload };\n\n    case 'USER_SIGNUP_SUCCESS':\n      return { ...state, loading: false, data: action.payload };\n    case 'LOGOUT_START':\n      return { ...state, loading: true, error: '' };\n\n    case 'LOGOUT_FAILURE':\n      return { ...state, loading: false, error: 'Logout failure' };\n\n    case 'LOGOUT_SUCCESS':\n      return { ...state, loading: false, data: null };\n\n    default:\n      return state;\n  }\n};\n\nexport const getUserReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'GET_USER_START':\n      return { ...state, loading: true, error: '' };\n\n    case 'GET_USER_FAILURE':\n      return { ...state, loading: false, error: action.payload, user: null };\n\n    case 'GET_USER_SUCCESS':\n      return { ...state, loading: false, user: action.payload };\n    default:\n      return state;\n  }\n};\nexport const getClickedUserReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'GET_CLICKED_USER_START':\n      return { ...state, loading: true, error: '' };\n\n    case 'GET_CLICKED_USER_FAILURE':\n      return { ...state, loading: false, error: action.payload, user: null };\n\n    case 'GET_CLICKED_USER_SUCCESS':\n      return { ...state, loading: false, user: action.payload };\n    case 'REMOVE_CLICKED_USER_START':\n      return { ...state, loading: true, error: '' };\n\n    case 'REMOVE_CLICKED_USER_FAILURE':\n      return { ...state, loading: false, error: action.payload };\n\n    case 'REMOVE_CLICKED_USER_SUCCESS':\n      return { ...state, loading: false, user: '' };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { friendsChattedWithReducer } from './friendsChattedWithReducer';\nimport { msgsReducer } from './msgsReducers';\nimport {\n  getClickedUserReducer,\n  getUserReducer,\n  userReducer,\n} from './userReducers';\n\nexport default combineReducers({\n  user: userReducer,\n  searchedUser: getUserReducer,\n  clickedUser: getClickedUserReducer,\n  msgsHistory: msgsReducer,\n  recentFriendsList: friendsChattedWithReducer,\n});\n","export const msgsReducer = (state=[], action) => {\n  switch (action.type) {\n    case 'SAVE_MSGS_HISTORY_START':\n      return { ...state, loading: true, error: null };\n    case 'SAVE_MSGS_HISTORY_SUCCESS':\n      return { ...state, loading: false, data: action.payload };\n    case 'SAVE_MSGS_HISTORY_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    case 'GET_MSGS_HISTORY_START':\n      return { ...state, loading: true, error: null };\n    case 'GET_MSGS_HISTORY_SUCCESS':\n      return { ...state, loading: false, data: action.payload };\n    case 'GET_MSGS_HISTORY_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n","export const friendsChattedWithReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'GET_FRIENDS_CHATTED_WITH_START':\n      return { ...state, loading: true, error: null };\n    case 'GET_FRIENDS_CHATTED_WITH_SUCCESS':\n      return { ...state, loading: false, data: action.payload };\n    case 'GET_FRIENDS_CHATTED_WITH_FAILURE':\n      return { ...state, loading: false, error: action.payload };\n    case 'ADD_TO_RECENT_START':\n      return { ...state, loading: true, error: null };\n    case 'ADD_TO_RECENT_SUCCESS':\n      return { ...state, loading: false, data: action.payload };\n    case 'ADD_TO_RECENT_FAILURE':\n      return { ...state, loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/combineReducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst composeEnhancers =\n  (process.env.NODE_ENV !== 'production' &&\n    typeof window !== 'undefined' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport {Provider} from 'react-redux'\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store} >\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </Provider>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}